This program should be regarded as a DEBUGGING aid, not as a 
certifier of correctness.
Call with the -l flag or read the license file for terms
and conditions of use.
Run this program with "-h" for the list of options.

Bugs, questions, and comments should be directed to
"melatti@di.uniroma1.it".

CMurphi compiler last modified date: Jan 26 2017
Include files last modified date:    Nov 8 2016
==========================================================================

==========================================================================
Caching Murphi Release 5.4.9.1
Finite-state Concurrent System Verifier.

Caching Murphi Release 5.4.9.1 is based on various versions of Murphi.
Caching Murphi Release 5.4.9.1 :
Copyright (C) 2009-2012 by Sapienza University of Rome.
Murphi release 3.1 :
Copyright (C) 1992 - 1999 by the Board of Trustees of
Leland Stanford Junior University.

==========================================================================

Protocol: n_mutualEx

Algorithm:
	Verification by breadth first search.
	with symmetry algorithm 3 -- Heuristic Small Memory Normalization
	with permutation trial limit 10.

Memory usage:

	* The size of each state is 24 bits (rounded up to 8 bytes).
	* The memory allocated for the hash table and state queue is
	  8 Mbytes.
	  With two words of overhead per state, the maximum size of
	  the state space is 476219 states.
	   * Use option "-k" or "-m" to increase this, if necessary.
	* Capacity in queue for breadth-first search: 47621 states.
	   * Change the constant gPercentActiveStates in mu_prolog.inc
	     to increase this, if necessary.

Warning: No trace will not be printed in the case of protocol errors!
         Check the options if you want to have error traces.

==========================================================================
Verbose option selected.  The following is the detailed progress.

Firing startstate Startstate 0
Obtained state:
n[1]:I
n[2]:I
x:true

------------------------------
Unpacking state from queue:
n[1]:I
n[2]:I
x:true

The following next states are obtained:

Firing rule Try, i:1
Obtained state:
n[1]:T
n[2]:I
x:true

Firing rule Try, i:2
Obtained state:
n[1]:I
n[2]:T
x:true

------------------------------
Unpacking state from queue:
n[1]:T
n[2]:I
x:true

The following next states are obtained:

Firing rule Crit, i:1
Obtained state:
n[1]:C
n[2]:I
x:false

Firing rule Try, i:2
Obtained state:
n[1]:T
n[2]:T
x:true

------------------------------
Unpacking state from queue:
n[1]:I
n[2]:T
x:true

The following next states are obtained:

Firing rule Crit, i:2
Obtained state:
n[1]:I
n[2]:C
x:false

Firing rule Try, i:1
Obtained state:
n[1]:T
n[2]:T
x:true

------------------------------
Unpacking state from queue:
n[1]:C
n[2]:I
x:false

The following next states are obtained:

Firing rule Exit, i:1
Obtained state:
n[1]:E
n[2]:I
x:false

Firing rule Try, i:2
Obtained state:
n[1]:C
n[2]:T
x:false

------------------------------
Unpacking state from queue:
n[1]:T
n[2]:T
x:true

The following next states are obtained:

Firing rule Crit, i:1
Obtained state:
n[1]:C
n[2]:T
x:false

Firing rule Crit, i:2
Obtained state:
n[1]:T
n[2]:C
x:false

------------------------------
Unpacking state from queue:
n[1]:I
n[2]:C
x:false

The following next states are obtained:

Firing rule Exit, i:2
Obtained state:
n[1]:I
n[2]:E
x:false

Firing rule Try, i:1
Obtained state:
n[1]:T
n[2]:C
x:false

------------------------------
Unpacking state from queue:
n[1]:E
n[2]:I
x:false

The following next states are obtained:

Firing rule Idle, i:1
Obtained state:
n[1]:I
n[2]:I
x:true

Firing rule Try, i:2
Obtained state:
n[1]:E
n[2]:T
x:false

------------------------------
Unpacking state from queue:
n[1]:C
n[2]:T
x:false

The following next states are obtained:

Firing rule Exit, i:1
Obtained state:
n[1]:E
n[2]:T
x:false

------------------------------
Unpacking state from queue:
n[1]:T
n[2]:C
x:false

The following next states are obtained:

Firing rule Exit, i:2
Obtained state:
n[1]:T
n[2]:E
x:false

------------------------------
Unpacking state from queue:
n[1]:I
n[2]:E
x:false

The following next states are obtained:

Firing rule Idle, i:2
Obtained state:
n[1]:I
n[2]:I
x:true

Firing rule Try, i:1
Obtained state:
n[1]:T
n[2]:E
x:false

------------------------------
Unpacking state from queue:
n[1]:E
n[2]:T
x:false

The following next states are obtained:

Firing rule Idle, i:1
Obtained state:
n[1]:I
n[2]:T
x:true

------------------------------
Unpacking state from queue:
n[1]:T
n[2]:E
x:false

The following next states are obtained:

Firing rule Idle, i:2
Obtained state:
n[1]:T
n[2]:I
x:true


==========================================================================

Status:

	No error found.

State Space Explored:

	12 states, 20 rules fired in 0.10s.

